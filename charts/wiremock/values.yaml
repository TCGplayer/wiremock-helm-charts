# Default values for WireMock.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

mappings: {}
#  custom_mapping.json: |
#    {
#      "request": {
#        "method": "POST",
#        "url": "/v1/custom-mapping"
#      },
#      "response":{
#        "status":200,
#        "bodyFileName":"responses/custom_response.json",
#        "headers":{
#          "Content-Type":"application/json"
#        }
#      }
#    }

responses: {}
#  custom_response.json: |
#    {
#      "message": "Here is my custom response!"
#    }

replicaCount: 1

revisionHistoryLimit: 10

image:
  repository: wiremock/wiremock
  # Overrides the image tag whose default is the chart appVersion.
  tag: 3.10.0
  pullPolicy: IfNotPresent

initContainer:
  image:
    repository: bash
    tag: 5
    pullPolicy: Always
  extraVolumeMounts: {}

extraInitContainers: []

deploymentStrategy: {}
# type: Recreate

persistence:
  mappings:
    enabled: false
    accessModes: ["ReadWriteOnce"]
    size: 10Gi
    # storageClassName: "-"
  responses:
    enabled: false
    accessModes: ["ReadWriteOnce"]
    size: 10Gi
    # storageClassName: "-"

extraVolumes: {}

extraVolumeMounts: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroupChangePolicy: Always
  # sysctls: []
  # supplementalGroups: []
  # fsGroup: 2000

securityContext: {}
  # seLinuxOptions: {}
  # runAsUser: 1000
  # runAsGroup: 2000
  # runAsNonRoot: true
  # privileged: false
  # readOnlyRootFilesystem: true
  # allowPrivilegeEscalation: false
  # capabilities:
  #   drop: ["ALL"]
  # seccompProfile:
  #   type: "RuntimeDefault"

service:
  type: ClusterIP
  externalPort: 9021
  internalPort: 9021

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

env: {}

args:
  - "--port=9021"
  - "--max-request-journal=1000"
  - "--local-response-templating"
  - "--root-dir=/home/wiremock/storage"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

scheme: "HTTP"

# extraObjects could be utilized to add dynamic manifests via values
extraObjects: []
# Examples:
# extraObjects:
# - apiVersion: kubernetes-client.io/v1
#   kind: ExternalSecret
#   metadata:
#     name: wiremock-config-{{ .Release.Name }}
#   spec:
#     backendType: gcpSecretsManager
#     data:
#     - remoteRef:
#         key: wiremock-config
#         property: config.json
#       secretKey: wiremock-config-gcp
# Alternatively, you can use strings, which lets you use additional templating features:
# extraObjects:
# - |
#   apiVersion: kubernetes-client.io/v1
#   kind: ExternalSecret
#   metadata:
#     name: wiremock-config-{{ .Release.Name }}
#   spec:
#     backendType: gcpSecretsManager
#     data:
#     - remoteRef:
#         key: wiremock-config
#         property: config.json
#       secretKey: {{ include "some-other-template" }}
